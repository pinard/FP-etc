#!/usr/bin/env python3
# Copyright © 2000, 2001, 2002, 2003 Progiciels Bourbeau-Pinard inc.
# François Pinard <pinard@iro.umontreal.ca>, 2000.

"""\
Generate and print a random passord, and its encryption.

Usage: password [OPTION]

Options:
  -n NUMBER   Generate that many passwords (instead of 1).
"""

import sys

class Main:
    number = 1

    def main(self, *arguments):
        import getopt
        options, arguments = getopt.getopt(arguments, 'n:')
        for option, valeur in options:
            if option == '-n':
                self.number = int(valeur)
        compteur = 0
        while compteur < self.number:
            password = NewPassword()
            sys.stdout.write('%-12s %s\n' % (password.clear, password.crypted))
            compteur += 1

class NewPassword:
    consonants = [
            '', '', '', '', '', '',
            'b', 'c', 'ch', 'd', 'f', 'g', 'j', 'k', 'l', 'm', 'n',
            'p', 'ph', 'qu', 'r', 's', 't', 'v', 'w', 'x', 'z']
    extra_consonants = ['r', 's', 't']
    vowels = ['a', 'e', 'i', 'o', 'u', 'y']
    extra_vowels = ['l', 'n', 'm']
    import string
    salts = list(string.lowercase + string.uppercase + string.digits + './')

    def __init__(self, crypted=True):
        import random
        self.clear = ''
        already = False
        while True:
            consonant = random.choice(self.consonants)
            vowel = random.choice(self.vowels)
            if already:
                already = False
            elif random.randrange(2):
                letter = random.choice(self.extra_consonants)
                if letter != consonant:
                    consonant += letter
                    already = True
            if already:
                already = False
            elif random.randrange(2):
                letter = random.choice(self.extra_vowels)
                if letter != vowel:
                    vowel += letter
                    already = True
            if len(self.clear) + len(consonant) + len(vowel) > 8:
                break
            self.clear += consonant + vowel
        if crypted:
            import crypt
            self.crypted = crypt.crypt(
                self.clear,
                random.choice(self.salts) + random.choice(self.salts))
        else:
            self.crypted = None

run = Main()
main = run.main

if __name__ == '__main__':
    main(*sys.argv[1:])
