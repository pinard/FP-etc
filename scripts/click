#!/usr/bin/env python3
# Copyright © 1993, 1999, 2002, 2008 Progiciels Bourbeau-Pinard inc.
# François Pinard <pinard@iro.umontreal.ca>, 1993.

"""\
Prendre copie d'un écran X.

Usage: click [OPTION]... [IMAGE]

Options:

  -h            Fournir cette aide, et ne rien faire d'autre
  -d SECONDES   Attendre avant de prendre la photo (implicitement 3 secondes)
  -w            Copie de la fenêtre courante, plutôt que tout l'écran

IMAGE est le nom du fichier qui recevra l'image de l'image copiée,
le type de fichier produit est déterminé par l'extension.  S'il est
fourni, -w est ignoré, et un click dans une fenêtre copie l'image
de la fenêtre, alors que la sélection d'une région rectangulaire ne
copie que le contenu de cette région.

Si IMAGE n'est pas fourni, gnome-screenshot est utilisé plutôt que import.
"""

import os, sys, time

class Main:
    delay = 3
    window = False

    def main(self, *arguments):
        import getopt
        options, arguments = getopt.getopt(arguments, 'd:hw')
        for option, value in options:
            if option == '-d':
                self.delay = int(value)
            elif option == '-h':
                sys.stdout.write(__doc__)
                return
            elif option == '-w':
                self.window = True
        if arguments:
            assert len(arguments) == 1, arguments
            image = arguments[0]
        else:
            image = None

        if image:
            time.sleep(self.delay)
            args = ['import', '-silent', '-descend']
            if image.endswith('.png'):
                # Gimp reveals an offset bug between image layers, whenever
                # a crop occurred.  Read and write the PNG to correct this.
                work = image[:-4] + '-tmp.png'
                subprocess.call(args + [work])
                from PIL import Image
                Image.open(work).save(image)
                os.remove(work)
            elif image.endswith('.gif'):
                # ImageMagick does not compress, but PBMnet library does.
                work = image[:-4] + '-tmp.gif'
                subprocess.call(args + [work])
                subprocess.call(
                        'giftopnm %s | ppmtogif > %s' % (work, image),
                        shell=True)
                os.remove(work)
            else:
                subprocess.call(args + [image])
        else:
            args = ['gnome-screenshot', '-d', self.delay]
            if self.window:
                args.append('-w')
            subprocess.call(args)

run = Main()
main = run.main

if __name__ == '__main__':
    main(*sys.argv[1:])
