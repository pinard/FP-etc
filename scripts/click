#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright © 1993, 1999, 2002, 2008 Progiciels Bourbeau-Pinard inc.
# François Pinard <pinard@iro.umontreal.ca>, 1993.

"""\
Prendre copie d'un écran X.

Usage: click [OPTION]... [IMAGE]

Options:
  -d SECONDES   Attendre avant de prendre la photo (implicitement 3 secondes)
  -w            Copie de la fenêtre courante, plutôt que tout l'écran.

IMAGE est le nom du fichier qui recevra l'image de l'image copiée,
le type de fichier produit est déterminé par l'extension.  S'il est
fourni, -w est ignoré, et un click dans une fenêtre copie l'image
de la fenêtre, alors que la sélection d'une région rectangulaire ne
copie que le contenu de cette région.

Si IMAGE n'est pas fourni, gnome-screenshot est utilisé plutôt que import.
"""

__metaclass__ = type
import os, sys, time

class Main:
    delay = 3
    window = False

    def main(self, *arguments):
        import getopt
        options, arguments = getopt.getopt(arguments, 'd:w')
        for option, value in options:
            if option == '-d':
                self.delay = int(value)
            elif option == '-w':
                self.window = True
        if arguments:
            assert len(arguments) == 1, arguments
            image = arguments[0]
        else:
            image = None
        if image:
            time.sleep(self.delay)
            os.system('import -silent -descend -border '
                      + ' '.join(arguments))
            if image.endswith('.gif'):
                os.system('giftopnm %s | ppmtogif > %s-tmp' % (image, image))
                os.remove(image)
                os.rename(image + '-tmp', image)
        else:
            if self.window:
                window = ' -w'
            else:
                window = ''
            os.system('gnome-screenshot -d %s%s' % (self.delay, window))

run = Main()
main = run.main

if __name__ == '__main__':
    main(*sys.argv[1:])
