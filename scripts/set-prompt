# Changer l'invite (Ã  exÃ©cuter dans le shell courant).  -*- shell-script -*-
# Copyright Â© 1998, 2000, 2001, 2002 Progiciels Bourbeau-Pinard inc.
# FranÃ§ois Pinard <pinard@iro.umontreal.ca>, 1998.

usage="
Ajuster l'invite du shell.

Usage: . set-prompt [INDICE]...

Le style de l'invite est choisi par zÃ©ro, un ou plusieurs indices, les
indices manquants sont dÃ©terminÃ©s automatiquement autant que possible.

Un INDICE Â«paleÂ», Â«whiteÂ», Â«wÂ» ou Â«blancÂ» colore l'invite sur un
fond d'Ã©cran pÃ¢le.  Un INDICE Â«darkÂ», Â«blackÂ», Â«bÂ» ou Â«noirÂ», colore
l'invite sur un fond d'Ã©cran foncÃ©.  Un INDICE Â«simpleÂ» ou Â«unknownÂ»
empÃªche la coloration de l'invite, mais Â«simpleÂ» empÃªche aussi l'heure
d'en faire partie.  Le fond des fenÃªtres sous X Windows est considÃ©rÃ© pÃ¢le.
Autrement, pour les terminaux Â«emacsÂ», Â«etermÂ», Â«linuxÂ», Â«kermitÂ»
ou Â«screenÂ», le fond est considÃ©rÃ© foncÃ©.  Pour un Â«vt100Â», indice
probable d'un Ã©mulateur de terminal, Â«set-promptÂ» demande interactivement
Ã  l'usager d'indiquer si le fond est pÃ¢le ou non.

Un INDICE Â«superÂ», normalement rÃ©servÃ© au super-usager, utilise des
couleurs plus mordantes pour l'invite, alors qu'un INDICE Â«normalÂ» utilise
des couleurs un peu plus douces.  Un INDICE valant Â«shÂ», Â«bashÂ» ou Â«zshÂ»
indique le shell en usage.  La coloration et l'heure dans l'invite n'ont
un sens que si le shell en usage est Â«bashÂ» ou Â«zshÂ».
"

# Ce script fabriquait sur Â«stdoutÂ» des commandes shell Ã  Ã©valuer (via
# "eval `set-prompt`").  Robert Lachance <rlachance@sram.qc.ca> l'a
# modifiÃ© pour directement affecter Â«PS1Â» et Â«PS2Â» (via ". set-prompt").

if [ -n "$BASH_VERSION" ]; then
  shell=bash
elif [ -n "$ZSH_VERSION" ]; then
  shell=zsh
else
  shell=sh
fi

if [ $LOGNAME = root ]; then
  user=super
  if [ -n "$DOSWIN" ]; then
    # Le bash de DJGPP ajoute plusieurs blancs suffixes Ã  \h.
    ident=$LOGNAME'@'$HOST':\w'
  else
    case $shell in
      sh) ident=$LOGNAME'@'$HOST ;;
      bash) ident='\u@\h:\W' ;;
      zsh) ident='%n@%m:%/' ;;
    esac
  fi
else
  user=normal
  if [ -n "$DOSWIN" ]; then
    # Le bash de DJGPP ajoute plusieurs blancs suffixes Ã  \h.
    ident='$LOGNAME@$HOST:\W'
  else
    case $shell in
      sh) ident=$LOGNAME'@'$HOST ;;
      bash) ident='\u@\h:\W' ;;
      zsh) ident='%n@%m:%2~' ;;
    esac
  fi
fi

fond=none

while [ $# -gt 0 ]; do
  case "$1" in
    simple|unknown|pale|dark) fond=$1 ;;
    white|w|blanc) fond=pale ;;
    black|b|noir) fond=dark ;;
    normal|super) user=$1 ;;
    sh|bash|zsh) shell=$1 ;;
    *) fond=break; break ;;
  esac
  shift
done

if [ $fond = none ]; then
  if [ $shell = sh ]; then
    fond=simple
  else
    case $TERM in
      cygwin|emacs|eterm|linux|kermit-*|screen|xterm)
        fond=dark ;;
      *)
        echo 1>&2 -n "Est-ce que le fond est pÃ¢le (o/y/n)? [o] "
        read answer
        [ -z "$answer" ] && answer=y
        case "$answer" in
          o|y) fond=pale ;;
          *) fond=dark ;;
        esac
        unset answer
        ;;
    esac
  fi
fi

# Pour faciliter la vision sur cygwin, Ã©viter le gras, et l'UTF-8.

case $fond-$user-$shell in
  simple-normal-sh)
     PS1=$?' '$ident'$ '
     PS2=$?' '$ident'+ '
     ;;
  simple-super-sh)
     PS1=$?' '$ident'# '
     PS2=$?' '$ident'+ '
     ;;
  unknown-normal-bash)
     PS1='\t $? '$ident' $ '
     PS2='\t $? '$ident' + '
     ;;
  unknown-normal-zsh)
     PS1='%T %? '$ident' $ '
     PS2='%T %? '$ident' + '
     ;;
  unknown-super-bash)
     PS1='\t $? '$ident' # '
     PS2='\t $? '$ident' + '
     ;;
  unknown-super-zsh)
     PS1='%T %? '$ident' # '
     PS2='%T %? '$ident' + '
     ;;
  dark-normal-bash)
     PS1='\[[;32;40m\]\t $?\[[36m\] '$ident'\[[32m\] $\[[0m\] '
     PS2='\[[;32;40m\]\t $?\[[37m\] '$ident'\[[32m\] +\[[0m\] '
     ;;
  dark-normal-zsh)
     PS1='%{[;32;40m%}%T %?%{[36m%} '$ident'%{[32m%} $%{[0m%} '
     PS2='%{[;32;40m%}%T %?%{[37m%} '$ident'%{[32m%} +%{[0m%} '
     ;;
  dark-super-bash)
     PS1='\[[;32;40m\]\t $?\[[33m\] '$ident'\[[31m\] #\[[0m\] '
     PS2='\[[;32;40m\]\t $?\[[37m\] '$ident'\[[31m\] +\[[0m\] '
     ;;
  dark-super-zsh)
     PS1='%{[;32;40m%}%T %?%{[33m%} '$ident'%{[31m%} #%{[0m%} '
     PS2='%{[;32;40m%}%T %?%{[37m%} '$ident'%{[31m%} +%{[0m%} '
     ;;
  pale-normal-bash)
     PS1='\[[;30;42m\]\t $?\[[46m\] '$ident'\[[42m\] $\[[0m\] '
     PS2='\[[;30;42m\]\t $?\[[47m\] '$ident'\[[42m\] +\[[0m\] '
     ;;
  pale-normal-zsh)
     PS1='%{[;30;42m%}%T %?%{[46m%} '$ident'%{[42m%} $%{[0m%} '
     PS2='%{[;30;42m%}%T %?%{[47m%} '$ident'%{[42m%} +%{[0m%} '
     ;;
  pale-super-bash)
     PS1='\[[;30;42m\]\t $?\[[43m\] '$ident'\[[41m\] #\[[0m\] '
     PS2='\[[;30;42m\]\t $?\[[47m\] '$ident'\[[41m\] +\[[0m\] '
     ;;
  pale-super-zsh)
     PS1='%{[;30;42m%}%T %?%{[43m%} '$ident'%{[41m%} #%{[0m%} '
     PS2='%{[;30;42m%}%T %?%{[47m%} '$ident'%{[41m%} +%{[0m%} '
     ;;
  *)
     echo "$usage"
     ;;
esac

unset fond
unset ident
unset shell
unset usage
unset user
unset b

# Faire un `cd' pour nettoyer l'invite dans `bash', lorsque `~'.
# Il peut y avoir un "Permission denied" lors d'un `su' hors de `root'.
[ "`ls -id . 2>/dev/null`" = "`cd && ls -id .`" ] && cd
